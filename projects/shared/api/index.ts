// This file was auto-generated by @joelek/ts-autoguard. Edit at own risk.

import * as autoguard from "@joelek/ts-autoguard";

export const Food = autoguard.guards.Object.of({
	"food_id": autoguard.guards.Number,
	"name": autoguard.guards.String
});

export type Food = ReturnType<typeof Food["as"]>;

export namespace Autoguard {
	export const Guards = {
		"Food": autoguard.guards.Reference.of(() => Food)
	};

	export type Guards = { [A in keyof typeof Guards]: ReturnType<typeof Guards[A]["as"]>; };

	export const Requests = {
		"getFood": autoguard.guards.Object.of({
			"options": autoguard.guards.Intersection.of(
				autoguard.api.Options,
				autoguard.guards.Object.of({
					"food_id": autoguard.guards.Number
				})
			),
			"headers": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.api.Headers,
					autoguard.guards.Object.of({})
				)
			),
			"payload": autoguard.guards.Union.of(
				autoguard.guards.Undefined
			)
		}),
		"getStaticContent": autoguard.guards.Object.of({
			"options": autoguard.guards.Intersection.of(
				autoguard.api.Options,
				autoguard.guards.Object.of({
					"filename": autoguard.guards.String
				})
			),
			"headers": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.api.Headers,
					autoguard.guards.Object.of({})
				)
			),
			"payload": autoguard.guards.Union.of(
				autoguard.guards.Undefined
			)
		})
	};

	export type Requests = { [A in keyof typeof Requests]: ReturnType<typeof Requests[A]["as"]>; };

	export const Responses = {
		"getFood": autoguard.guards.Object.of({
			"status": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Number
			),
			"headers": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.api.Headers,
					autoguard.guards.Object.of({})
				)
			),
			"payload": autoguard.guards.Object.of({
				"food": autoguard.guards.Reference.of(() => Food)
			})
		}),
		"getStaticContent": autoguard.guards.Object.of({
			"status": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Number
			),
			"headers": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.api.Headers,
					autoguard.guards.Object.of({})
				)
			),
			"payload": autoguard.api.Binary
		})
	};

	export type Responses = { [A in keyof typeof Responses]: ReturnType<typeof Responses[A]["as"]>; };
};
